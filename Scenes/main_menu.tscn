[gd_scene load_steps=28 format=2]

[ext_resource path="res://SFX/start.wav" type="AudioStream" id=1]
[ext_resource path="res://SFX/Pickup_Coin.wav" type="AudioStream" id=2]
[ext_resource path="res://Textures/dente_icon.png" type="Texture" id=3]
[ext_resource path="res://Textures/logosplash.png" type="Texture" id=4]
[ext_resource path="res://Fonts/mago3.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://Fonts/mago1.ttf" type="DynamicFontData" id=6]
[ext_resource path="res://Textures/food_sheet.png" type="Texture" id=7]
[ext_resource path="res://Textures/cookipack.png" type="Texture" id=8]
[ext_resource path="res://Scenes/bg_garganta.tscn" type="PackedScene" id=9]
[ext_resource path="res://Textures/black.png" type="Texture" id=10]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

#Variaveis
var lista_de_opcoes = []
var selecionado = 0
var funcao = null

func _ready():
	lista_de_opcoes = [
#		['root_mode', $HBoxContainer/Opcoes/root_mode/Position2D.global_position],
		['nutella_mode', $HBoxContainer/Opcoes/nutella_mode/Position2D.global_position],
		['options', $HBoxContainer/Opcoes/options/Position2D.global_position],
		['quit', $HBoxContainer/Opcoes/quit/Position2D.global_position]
	]
	
	$Sprite.global_position = lista_de_opcoes[selecionado][1]
	set_process(true)
	pass

func _process(delta):
	if Input.is_action_just_pressed('ui_down'):
		selecionado += 1
		$AudioStreamPlayer.play()
	if Input.is_action_just_pressed('ui_up'):
		selecionado -= 1
		$AudioStreamPlayer.play()
	
	if selecionado > lista_de_opcoes.size() - 1:
		selecionado = 0
	if selecionado < 0:
		selecionado = lista_de_opcoes.size() -1 
	
	$Sprite.global_position = lista_de_opcoes[selecionado][1]
	
	if Input.is_action_just_pressed('ui_accept') or Input.is_action_just_pressed('ui_attack'):
		funcao = funcref(self, lista_de_opcoes[selecionado][0])
		
		$AudioStreamPlayer.play()
		yield(get_tree().create_timer(0.075), 'timeout')
		$AudioStreamPlayer2.play()
		
		$AnimationPlayer.play('fade_out')
		
	pass

#func root_mode():
#	$HBoxContainer/Opcoes/root_mode/Button._on_Button_pressed()
#	pass

func nutella_mode():
#	$HBoxContainer/Opcoes/nutella_mode/Button._on_Button_pressed()
	$HBoxContainer/Opcoes/nutella_mode/Button._on_Button_pressed()
	$AnimationPlayer.play('fade_out')
	pass

func options():
#	$AudioStreamPlayer.play()
#	yield(get_tree().create_timer(0.075), 'timeout')
#	$AudioStreamPlayer2.play()
#	$AnimationPlayer.play('fade_out')
	$HBoxContainer/Opcoes/options/Button2._on_Button_pressed()
	pass

func quit():
	get_tree().quit()
	pass


func _on_AnimationPlayer_animation_finished( anim_name ):
	if anim_name == 'fade_out':
		funcao.call_func()
		pass
	pass # replace with function body
"

[sub_resource type="Animation" id=2]
resource_name = "fade_in"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.5, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("TextureRect:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("TextureRect:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.5, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "fade_out"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.3, 1.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("HBoxContainer/Opcoes/nutella_mode/Button")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1.9 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_on_Button_pressed"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("TextureRect:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}

[sub_resource type="StyleBoxLine" id=4]
color = Color( 0, 0, 0, 0 )

[sub_resource type="DynamicFont" id=5]
size = 20
font_data = ExtResource( 5 )

[sub_resource type="GDScript" id=6]
script/source = "extends Button

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass


func _on_Button_pressed():
	get_tree().change_scene(\"res://Scenes/howtoplay.tscn\")
	pass # replace with function body
"

[sub_resource type="StyleBoxLine" id=7]
color = Color( 0, 0, 0, 0 )

[sub_resource type="GDScript" id=8]
script/source = "extends Button

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass


func _on_Button_pressed():
	get_tree().change_scene(\"res://Scenes/main_scene.tscn\")
	pass # replace with function body
"

[sub_resource type="GDScript" id=9]
script/source = "extends Button

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass


func _on_Button_pressed():
	get_tree().change_scene(\"res://Scenes/howtoplay.tscn\")
	pass # replace with function body
"

[sub_resource type="GDScript" id=10]
script/source = "extends Button

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass


func _on_Button_pressed():
	get_tree().quit()#change_scene(\"res://Scenes/howtoplay.tscn\")
	pass # replace with function body
"

[sub_resource type="DynamicFont" id=11]
size = 30
font_data = ExtResource( 6 )

[sub_resource type="GDScript" id=12]
script/source = "extends Label

var modo = 'vermelho'
var cor_atual = Color(1, 0, 0)
var velocidade_da_mudanca_de_cor = 0.05

func _ready():
	set_process(true)
	pass

func _process(delta):
	if modo == 'vermelho':
		cor_atual.g += velocidade_da_mudanca_de_cor
		cor_atual.b -= velocidade_da_mudanca_de_cor
		if cor_atual.g >= 1:
			modo = 'verde'
	elif modo == 'verde':
		cor_atual.b += velocidade_da_mudanca_de_cor
		cor_atual.r -= velocidade_da_mudanca_de_cor
		if cor_atual.b >= 0.2:
			modo = 'azul'
	elif modo == 'azul':
		cor_atual.r += velocidade_da_mudanca_de_cor
		cor_atual.g -= velocidade_da_mudanca_de_cor
		if cor_atual.r >= 1:
			modo = 'vermelho'
	set_modulate(cor_atual)
	
	set_text(\"HIGHSCORE: \" + str(global.highscore))
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass
"

[sub_resource type="GDScript" id=13]
script/source = "extends Sprite

# class member variables go here, for example:
# var a = 2
var equilibro = Vector2()
var angulo = 0
var deslocamento = 0

func _ready():
	equilibro = self.global_position
#	yield(get_tree().create_timer(1), 'timeout')
	set_physics_process(true)
	pass

func _physics_process(delta):
		
	angulo += PI/8
	self.global_position = equilibro + Vector2(0, 4*sin(angulo * delta * 15 + deslocamento))
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass
"

[sub_resource type="GDScript" id=14]
script/source = "extends Sprite

# class member variables go here, for example:
# var a = 2
var equilibro = Vector2()
var angulo = 0
var deslocamento = PI/4

func _ready():
	equilibro = self.global_position
#	yield(get_tree().create_timer(1), 'timeout')
	set_physics_process(true)
	pass

func _physics_process(delta):
		
	angulo += PI/8
	self.global_position = equilibro + Vector2(0, 4*sin(angulo * delta * 15 + deslocamento))
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass
"

[sub_resource type="GDScript" id=15]
script/source = "extends Sprite

# class member variables go here, for example:
# var a = 2
var equilibro = Vector2()
var angulo = 0
var deslocamento = PI/2

func _ready():
	equilibro = self.global_position
#	yield(get_tree().create_timer(1), 'timeout')
	set_physics_process(true)
	pass

func _physics_process(delta):
		
	angulo += PI/8
	self.global_position = equilibro + Vector2(0, 4*sin(angulo * delta * 15 + deslocamento))
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass
"

[sub_resource type="GDScript" id=16]
script/source = "extends Sprite

# class member variables go here, for example:
# var a = 2
var equilibro = Vector2()
var angulo = 0
var deslocamento = PI

func _ready():
	equilibro = self.global_position
#	yield(get_tree().create_timer(1), 'timeout')
	set_physics_process(true)
	pass

func _physics_process(delta):
		
	angulo += PI/8
	self.global_position = equilibro + Vector2(0, 4*sin(angulo * delta * 15 + deslocamento))
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass
"

[sub_resource type="GDScript" id=17]
script/source = "extends Sprite

# class member variables go here, for example:
# var a = 2
var equilibro = Vector2()
var angulo = 0
var deslocamento = 3*PI/2

func _ready():
	equilibro = self.global_position
#	yield(get_tree().create_timer(1), 'timeout')
	set_physics_process(true)
	pass

func _physics_process(delta):
		
	angulo += PI/8
	self.global_position = equilibro + Vector2(0, 4*sin(angulo * delta * 15 + deslocamento))
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass
"

[node name="main_menu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 1 )

[node name="AudioStreamPlayer2" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "fade_in"
anims/fade_in = SubResource( 2 )
anims/fade_out = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( -114, -48 )
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 3 )

[node name="HBoxContainer" type="VBoxContainer" parent="."]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="HSeparator4" type="HSeparator" parent="HBoxContainer"]
margin_right = 800.0
margin_bottom = 30.0
custom_styles/separator = SubResource( 4 )
custom_constants/separation = 30

[node name="HSeparator5" type="HSeparator" parent="HBoxContainer"]
margin_top = 34.0
margin_right = 800.0
margin_bottom = 64.0
custom_styles/separator = SubResource( 4 )
custom_constants/separation = 30

[node name="Logo" type="CenterContainer" parent="HBoxContainer"]
margin_top = 68.0
margin_right = 800.0
margin_bottom = 264.0

[node name="TextureRect" type="TextureRect" parent="HBoxContainer/Logo"]
margin_left = 174.0
margin_right = 626.0
margin_bottom = 196.0
texture = ExtResource( 4 )

[node name="HSeparator6" type="HSeparator" parent="HBoxContainer"]
margin_top = 268.0
margin_right = 800.0
margin_bottom = 318.0
custom_styles/separator = SubResource( 4 )
custom_constants/separation = 50

[node name="Opcoes" type="VBoxContainer" parent="HBoxContainer"]
margin_top = 322.0
margin_right = 800.0
margin_bottom = 425.0
mouse_filter = 0
size_flags_horizontal = 3
alignment = 1

[node name="root_mode" type="CenterContainer" parent="HBoxContainer/Opcoes"]
visible = false
margin_right = 800.0
margin_bottom = 23.0
size_flags_vertical = 5

[node name="Button" type="Button" parent="HBoxContainer/Opcoes/root_mode"]
margin_left = 355.0
margin_right = 445.0
margin_bottom = 23.0
custom_fonts/font = SubResource( 5 )
text = "ROOT MODE"
script = SubResource( 6 )

[node name="Position2D" type="Position2D" parent="HBoxContainer/Opcoes/root_mode"]
position = Vector2( 300, 12 )

[node name="HSeparator" type="HSeparator" parent="HBoxContainer/Opcoes"]
visible = false
margin_right = 800.0
margin_bottom = 9.0
custom_styles/separator = SubResource( 7 )
custom_constants/separation = 9

[node name="nutella_mode" type="CenterContainer" parent="HBoxContainer/Opcoes"]
margin_right = 800.0
margin_bottom = 23.0
size_flags_vertical = 5

[node name="Button" type="Button" parent="HBoxContainer/Opcoes/nutella_mode"]
margin_left = 375.0
margin_right = 425.0
margin_bottom = 23.0
custom_fonts/font = SubResource( 5 )
text = "PLAY!"
script = SubResource( 8 )

[node name="Position2D" type="Position2D" parent="HBoxContainer/Opcoes/nutella_mode"]
position = Vector2( 300, 14 )

[node name="HSeparator2" type="HSeparator" parent="HBoxContainer/Opcoes"]
margin_top = 27.0
margin_right = 800.0
margin_bottom = 36.0
custom_styles/separator = SubResource( 7 )
custom_constants/separation = 9

[node name="options" type="CenterContainer" parent="HBoxContainer/Opcoes"]
margin_top = 40.0
margin_right = 800.0
margin_bottom = 63.0
size_flags_vertical = 5

[node name="Button2" type="Button" parent="HBoxContainer/Opcoes/options"]
margin_left = 341.0
margin_right = 458.0
margin_bottom = 23.0
custom_fonts/font = SubResource( 5 )
text = "HOW TO PLAY?!"
script = SubResource( 9 )

[node name="Position2D" type="Position2D" parent="HBoxContainer/Opcoes/options"]
position = Vector2( 300, 16 )

[node name="HSeparator3" type="HSeparator" parent="HBoxContainer/Opcoes"]
margin_top = 67.0
margin_right = 800.0
margin_bottom = 76.0
custom_styles/separator = SubResource( 7 )
custom_constants/separation = 9

[node name="quit" type="CenterContainer" parent="HBoxContainer/Opcoes"]
margin_top = 80.0
margin_right = 800.0
margin_bottom = 103.0
size_flags_vertical = 5

[node name="Button2" type="Button" parent="HBoxContainer/Opcoes/quit"]
margin_left = 375.0
margin_right = 424.0
margin_bottom = 23.0
custom_fonts/font = SubResource( 5 )
text = "QUIT!"
script = SubResource( 10 )

[node name="Position2D" type="Position2D" parent="HBoxContainer/Opcoes/quit"]
position = Vector2( 300, 12 )

[node name="HSeparator7" type="HSeparator" parent="HBoxContainer"]
margin_top = 429.0
margin_right = 800.0
margin_bottom = 469.0
custom_styles/separator = SubResource( 4 )
custom_constants/separation = 40

[node name="CenterContainer" type="CenterContainer" parent="HBoxContainer"]
margin_top = 473.0
margin_right = 800.0
margin_bottom = 523.0

[node name="Label" type="Label" parent="HBoxContainer/CenterContainer"]
margin_left = 339.0
margin_right = 460.0
margin_bottom = 50.0
custom_fonts/font = SubResource( 11 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/line_spacing = 2
custom_constants/shadow_as_outline = 10
text = "PLACEHOLDER
"
align = 1
script = SubResource( 12 )

[node name="HSeparator8" type="HSeparator" parent="HBoxContainer"]
margin_top = 527.0
margin_right = 800.0
margin_bottom = 537.0
custom_styles/separator = SubResource( 4 )
custom_constants/separation = 10

[node name="fluff" type="HBoxContainer" parent="HBoxContainer"]
margin_top = 541.0
margin_right = 800.0
margin_bottom = 600.0
size_flags_vertical = 3

[node name="CenterContainer" type="CenterContainer" parent="HBoxContainer/fluff"]
margin_bottom = 59.0

[node name="Sprite" type="Sprite" parent="HBoxContainer/fluff/CenterContainer"]
position = Vector2( 300, 0 )
texture = ExtResource( 7 )
hframes = 4
script = SubResource( 13 )

[node name="Sprite2" type="Sprite" parent="HBoxContainer/fluff/CenterContainer"]
position = Vector2( 350, 0 )
texture = ExtResource( 7 )
hframes = 4
frame = 1
script = SubResource( 14 )

[node name="Sprite3" type="Sprite" parent="HBoxContainer/fluff/CenterContainer"]
position = Vector2( 400, 0 )
texture = ExtResource( 7 )
hframes = 4
frame = 2
script = SubResource( 15 )

[node name="Sprite4" type="Sprite" parent="HBoxContainer/fluff/CenterContainer"]
position = Vector2( 450, 0 )
texture = ExtResource( 7 )
hframes = 4
frame = 3
script = SubResource( 16 )

[node name="Sprite5" type="Sprite" parent="HBoxContainer/fluff/CenterContainer"]
position = Vector2( 500, 0 )
scale = Vector2( 0.7, 0.7 )
texture = ExtResource( 8 )
script = SubResource( 17 )

[node name="garganta" parent="." instance=ExtResource( 9 )]

[node name="Sprite" parent="garganta/ParallaxLayer" index="0"]
modulate = Color( 0.847656, 0.847656, 0.847656, 1 )

[node name="TextureRect" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 10 )
expand = true
stretch_mode = 2
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="pressed" from="HBoxContainer/Opcoes/root_mode/Button" to="HBoxContainer/Opcoes/root_mode/Button" method="_on_Button_pressed"]
[connection signal="pressed" from="HBoxContainer/Opcoes/nutella_mode/Button" to="HBoxContainer/Opcoes/nutella_mode/Button" method="_on_Button_pressed"]
[connection signal="pressed" from="HBoxContainer/Opcoes/options/Button2" to="HBoxContainer/Opcoes/options/Button2" method="_on_Button_pressed"]
[connection signal="pressed" from="HBoxContainer/Opcoes/quit/Button2" to="HBoxContainer/Opcoes/quit/Button2" method="_on_Button_pressed"]

[editable path="garganta"]
